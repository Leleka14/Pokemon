{"version":3,"sources":["components/HeaderComponent.js","shared/baseUrl.js","components/TypesComponent.js","components/PokemonCardComponent.js","components/DetailedPokemonCardComponent.js","components/MainComponent.js","App.js","reportWebVitals.js","index.js"],"names":["Header","className","imageOfPokemon","TypeBadge","props","Badge","color","type","PokemonCard","s","Card","outline","CardImg","width","src","id","CardBody","CardTitle","pokemon","name","charAt","toUpperCase","slice","RenderCard","styleCard","mainInfoAboutPokemon","style","detailedPokemonObject","types","join","attack","defense","hp","spAttack","spDefense","speed","weight","totalMoves","DetailedCard","display","info","toggleDetailedCard","Main","useState","state","setState","amountOfPokemons","setAmountOfPokemons","detailedPokemon","setDetailedPokemon","setType","useEffect","fetch","then","response","json","results","capitalize","allCards","map","index","onClick","url","stats","base_stat","moves","length","obj","concat","Button","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.eee1c631.chunk.js","sourcesContent":["import React from 'react';\r\n\r\n\r\nconst Header = () =>{\r\n    return (\r\n        <div className=\"row justify-content-center\">\r\n            <div className=\"header col-md-5 col-12 align-items-center border border-dark\">\r\n                <h1 className=\"text-center\">Pokedex</h1>\r\n            </div>\r\n        </div>\r\n       \r\n    );\r\n}\r\n\r\nexport default Header;","export const allPokemons = 'https://pokeapi.co/api/v2/pokemon?limit=';\r\nexport const typesOfPokemons = '';\r\nexport const imageOfPokemon = 'https://pokeres.bastionbot.org/images/pokemon/'; //in the end add .png","import React from 'react'\r\nimport { Badge } from 'reactstrap'\r\n\r\nconst TypeBadge = (props) =>{\r\n    return(\r\n        <Badge color={props.color}>{props.type}</Badge>\r\n    )\r\n}\r\n\r\nexport default TypeBadge;","import React from 'react'\r\nimport {Card, CardImg, CardBody, CardTitle} from 'reactstrap'\r\nimport { imageOfPokemon } from '../shared/baseUrl'\r\nimport TypeBadge from './TypesComponent'\r\n\r\nconst PokemonCard = (props) =>{\r\n    const capitalize = (s) => {\r\n        if (typeof s !== 'string') return ''\r\n        return s.charAt(0).toUpperCase() + s.slice(1)\r\n    }\r\n    \r\n    return(\r\n        <div>\r\n            <Card className=\"mb-4 pokemon-card\" outline color=\"secondary\">\r\n                <div className=\"p-2\">\r\n                    <CardImg width=\"100%\" src={imageOfPokemon+''+props.id+'.png'} className=\"border\"/>\r\n                </div>\r\n                <CardBody>\r\n                    <CardTitle>\r\n                        <h6 className=\"text-center\">{capitalize(props.pokemon.name)}</h6>\r\n                    </CardTitle>\r\n                    <TypeBadge />\r\n                </CardBody>\r\n            </Card>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default PokemonCard;","import React from 'react'\r\nimport {Card, CardImg, CardBody, CardTitle } from 'reactstrap'\r\nimport { imageOfPokemon } from '../shared/baseUrl'\r\n\r\nconst RenderCard = ({pokemon, styleCard}) =>{\r\n    if(pokemon.mainInfoAboutPokemon != null){\r\n        return(\r\n            <div className=\"\">\r\n                <Card outline color=\"secondary\" style={styleCard}>\r\n                    <div className=\"p-2\">\r\n                        <CardImg width=\"100%\" src={imageOfPokemon+''+pokemon.detailedPokemonObject.id+'.png'} className=\"border\"/>\r\n                    </div>\r\n                    <CardBody className=\"text-center\">\r\n                        <CardTitle>\r\n                            <h3>{pokemon.mainInfoAboutPokemon.name} #{pokemon.detailedPokemonObject.id}</h3>\r\n                        </CardTitle>\r\n                        <div className=\"row\" >\r\n                            <div className=\"col-6 border border-dark\">Type</div>\r\n                            <div className=\"col-6 border border-dark border-left-0\">{pokemon.mainInfoAboutPokemon.types.join()}</div>\r\n                        </div>\r\n                        <div className=\"row\">\r\n                            <div className=\"col-6 border border-dark\">Attack</div>\r\n                            <div className=\"col-6 border border-dark border-left-0\">{pokemon.mainInfoAboutPokemon.attack}</div>\r\n                        </div>\r\n                        <div className=\"row\">\r\n                            <div className=\"col-6 border border-dark\">Defense</div>\r\n                            <div className=\"col-6 border border-dark border-left-0\">{pokemon.mainInfoAboutPokemon.defense}</div>\r\n                        </div>\r\n                        <div className=\"row\">\r\n                            <div className=\"col-6 border border-dark\">HP</div>\r\n                            <div className=\"col-6 border border-dark border-left-0\">{pokemon.mainInfoAboutPokemon.hp}</div>\r\n                        </div>\r\n                        <div className=\"row\">\r\n                            <div className=\"col-6 border border-dark\">SP Attack</div>\r\n                            <div className=\"col-6 border border-dark border-left-0\">{pokemon.mainInfoAboutPokemon.spAttack}</div>\r\n                        </div>\r\n                        <div className=\"row\">\r\n                            <div className=\"col-6 border border-dark\">SP Defense</div>\r\n                            <div className=\"col-6 border border-dark border-left-0\">{pokemon.mainInfoAboutPokemon.spDefense}</div>\r\n                        </div>\r\n                        <div className=\"row\">\r\n                            <div className=\"col-6 border border-dark\">Speed</div>\r\n                            <div className=\"col-6 border border-dark border-left-0\">{pokemon.mainInfoAboutPokemon.speed}</div>\r\n                        </div>\r\n                        <div className=\"row\">\r\n                            <div className=\"col-6 border border-dark\">Weight</div>\r\n                            <div className=\"col-6 border border-dark border-left-0\">{pokemon.mainInfoAboutPokemon.weight}</div>\r\n                        </div>\r\n                        <div className=\"row\">\r\n                            <div className=\"col-6 border border-dark\">Total moves</div>\r\n                            <div className=\"col-6 border border-dark border-left-0\">{pokemon.mainInfoAboutPokemon.totalMoves}</div>\r\n                        </div>\r\n                    </CardBody>\r\n                </Card>\r\n            </div>\r\n        )\r\n    }\r\n    else{\r\n        return(\r\n            <div></div>\r\n        )\r\n    }\r\n}\r\n\r\nconst DetailedCard = (props) =>{\r\n    \r\n    const styleCard = {\r\n        display: 'none'\r\n    }\r\n    if(props.info.toggleDetailedCard){\r\n        styleCard.display = 'block'\r\n    }\r\n    if(props.info != null){\r\n        return(\r\n            <RenderCard pokemon={props.info} styleCard={styleCard}/>\r\n        )\r\n    }\r\n    \r\n}\r\n\r\nexport default DetailedCard;","import React, {useState, useEffect} from 'react'\r\nimport Header from './HeaderComponent'\r\nimport PokemonCard from './PokemonCardComponent'\r\nimport DetailedCard from './DetailedPokemonCardComponent'\r\nimport { allPokemons,  } from '../shared/baseUrl'\r\nimport { Button } from 'reactstrap'\r\n\r\nconst Main = () =>{\r\n\r\n    const [state, setState] = useState([])\r\n    const [amountOfPokemons, setAmountOfPokemons] = useState(12)\r\n    const [detailedPokemon, setDetailedPokemon] = useState({\r\n        detailedPokemonObject: null,\r\n        mainInfoAboutPokemon: null,\r\n        toggleDetailedCard: false\r\n    })\r\n\r\n    const [type, setType] = useState([])\r\n\r\n    useEffect(() => {\r\n        const fetchPokemons = () =>{\r\n            return fetch(allPokemons + `${amountOfPokemons}`)\r\n                .then(response => response.json())\r\n                \r\n                .then(response => {\r\n                    setState(response.results)\r\n                })\r\n        }\r\n        fetchPokemons();\r\n    }, [amountOfPokemons])\r\n\r\n    const capitalize = (s) => {\r\n        if (typeof s !== 'string') return ''\r\n        return s.charAt(0).toUpperCase() + s.slice(1)\r\n    }\r\n\r\n    const selectPokemon = (url) =>{\r\n        return fetch(url)\r\n            .then(response => response.json())\r\n            .then(response => {\r\n                setDetailedPokemon({detailedPokemonObject: response, mainInfoAboutPokemon: {\r\n                    name: capitalize(response.name),\r\n                    types: response.types.map((type)=> type.type.name).map((type)=>capitalize(type)),\r\n                    attack: response.stats[1].base_stat,\r\n                    defense: response.stats[2].base_stat,\r\n                    hp: response.stats[0].base_stat,\r\n                    spAttack: response.stats[3].base_stat,\r\n                    spDefense: response.stats[4].base_stat,\r\n                    speed: response.stats[5].base_stat,\r\n                    weight: response.weight,\r\n                    totalMoves: response.moves.length\r\n                }, toggleDetailedCard: true});\r\n                let obj = {\r\n                    name: capitalize(response.name),\r\n                    types: response.types.map((type)=> type.type.name).map((type)=>capitalize(type))\r\n                }\r\n                setType(type.concat(obj))\r\n            })\r\n    }\r\n\r\n    const allCards = state.map((pokemon, index) => {\r\n        index +=1;\r\n        return(\r\n            <div key={index} className=\"col-6 col-lg-4\" onClick={() => selectPokemon(pokemon.url)}>\r\n                <PokemonCard pokemon={pokemon} id={index}/>\r\n            </div>\r\n        )\r\n    })\r\n\r\n    const increaseAmountOfPokemons = () =>{\r\n        setAmountOfPokemons(amountOfPokemons+12)\r\n    }\r\n\r\n\r\n    return(\r\n        <div className=\"App\">\r\n            <Header/>\r\n            <div className=\"container\">\r\n                <div className=\"row mt-4\">\r\n                    <div className=\"col-12 col-md-6 \">\r\n                        <div className=\"row\">\r\n                            {allCards}\r\n                            <div className=\"col-12\">\r\n                                <Button color=\"primary\" className=\"col-12\" onClick={increaseAmountOfPokemons}>Load More</Button>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"col-12 col-md-4 col-lg-3 order-first order-md-last\">\r\n                        <DetailedCard  info={detailedPokemon}/>\r\n                    </div>\r\n                \r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Main;","import './App.css';\r\nimport Main from './components/MainComponent'\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n      <Main/>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport 'bootstrap-social/bootstrap-social.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}